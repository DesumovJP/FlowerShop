// –¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω —É Strapi
const STRAPI_URL = 'http://localhost:1337';
const FRONTEND_URL = 'http://localhost:3000';

async function testShiftsAPI() {
  console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API –∑–º—ñ–Ω...\n');

  try {
    // –¢–µ—Å—Ç 1: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –∑–º—ñ–Ω–∏
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –∑–º—ñ–Ω–∏...');
    const createResponse = await fetch(`${FRONTEND_URL}/api/shifts`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        date: '2024-01-15',
        employee: '–Ü–≤–∞–Ω –ü–µ—Ç—Ä–µ–Ω–∫–æ',
        shiftType: 'day',
        notes: '–¢–µ—Å—Ç–æ–≤–∞ –∑–º—ñ–Ω–∞'
      }),
    });

    if (createResponse.ok) {
      const createData = await createResponse.json();
      console.log('‚úÖ –ó–º—ñ–Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ:', createData);
      
      const shiftId = createData.data?.id;
      
      if (shiftId) {
        // –¢–µ—Å—Ç 2: –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–º—ñ–Ω–∏
        console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–º—ñ–Ω–∏...');
        const updateResponse = await fetch(`${FRONTEND_URL}/api/shifts`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            id: shiftId,
            date: '2024-01-15',
            employee: '–ú–∞—Ä—ñ—è –ö–æ–≤–∞–ª–µ–Ω–∫–æ',
            shiftType: 'night',
            notes: '–û–Ω–æ–≤–ª–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞ –∑–º—ñ–Ω–∞'
          }),
        });

        if (updateResponse.ok) {
          const updateData = await updateResponse.json();
          console.log('‚úÖ –ó–º—ñ–Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ:', updateData);
        } else {
          const errorData = await updateResponse.json();
          console.log('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–º—ñ–Ω–∏:', errorData);
        }

        // –¢–µ—Å—Ç 3: –í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–º—ñ–Ω–∏
        console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–º—ñ–Ω–∏...');
        const deleteResponse = await fetch(`${FRONTEND_URL}/api/shifts?id=${shiftId}`, {
          method: 'DELETE',
        });

        if (deleteResponse.ok) {
          const deleteData = await deleteResponse.json();
          console.log('‚úÖ –ó–º—ñ–Ω–∞ –≤–∏–¥–∞–ª–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ:', deleteData);
        } else {
          const errorData = await deleteResponse.json();
          console.log('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–º—ñ–Ω–∏:', errorData);
        }
      }
    } else {
      const errorData = await createResponse.json();
      console.log('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–º—ñ–Ω–∏:', errorData);
    }

    // –¢–µ—Å—Ç 4: –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–º—ñ–Ω
    console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–º—ñ–Ω...');
    const getResponse = await fetch(`${FRONTEND_URL}/api/shifts?year=2024&month=1`);
    
    if (getResponse.ok) {
      const getData = await getResponse.json();
      console.log('‚úÖ –ó–º—ñ–Ω–∏ –æ—Ç—Ä–∏–º–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ:', getData);
    } else {
      const errorData = await getResponse.json();
      console.log('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–º—ñ–Ω:', errorData);
    }

  } catch (error) {
    console.log('‚ùå –ó–∞–≥–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É
testShiftsAPI();
